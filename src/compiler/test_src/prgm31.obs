bundle Default {
	class Test {
		function : Main(args : System.String[]) ~ Nil {
			Run();
		}
	
#		function : native : ToString(f : Float) ~ System.String {
		function : ToString(f : Float) ~ System.String {
			value : Float := f;
			string : System.String := System.String->New();
			
			digit : Int;
			result : Float;

			result := value / 1000000.0;
			if(result > 0.99 & result < 10.0) {
				# 1000.00
				digit := result->Floor();
				string->Append((digit + 48)->As(Char));
				value := value - digit * 1000000.0;
			}
			else if(result < 0.99 & value < f) {
				string->Append('0');
			};

			result := value / 100000.0;
			if(result > 0.99 & result < 10.0) {
				# 1000.00
				digit := result->Floor();
				string->Append((digit + 48)->As(Char));
				value := value - digit * 100000.0;
			}
			else if(result < 0.99 & value < f) {
				string->Append('0');
			};

			result := value / 10000.0;
			if(result > 0.99 & result < 10.0) {
				# 1000.00
				digit := result->Floor();
				string->Append((digit + 48)->As(Char));
				value := value - digit * 10000.0;
			}
			else if(result < 0.99 & value < f) {
				string->Append('0');
			};
			result := value / 1000.0;
			if(result > 0.99 & result < 10.0) {
				# 1000.00
				digit := result->Floor();
				string->Append((digit + 48)->As(Char));
				value := value - digit * 1000.0;
			}
			else if(result < 0.99 & value < f) {
				string->Append('0');
			};

			result := value / 100.0;
			if(result > 0.99 & result < 10.0) {
				# 100.00
				digit := result->Floor();
				string->Append((digit + 48)->As(Char));
				value := value - digit * 100.0;
			}
			else if(result < 0.99 & value < f) {
				string->Append('0');
			};

			result := value / 10.0;
			if(result > 0.99 & result < 10.0) {
				# 10.00
				digit := result->Floor();
				string->Append((digit + 48)->As(Char));
				value := value - digit * 10.0;
			}
			else if(result < 0.99 & value < f) {
				string->Append('0');
			};

			result := value;
			if(result > 0.99 & result < 10.0) {
				# 1.00
				digit := result->Floor();				
				string->Append((digit + 48)->As(Char));
				value := value - digit;
			}
			else if(result < 0.99 & value < f) {
				string->Append('0');
			};

			string->Append('.');

			result := value * 10.0;
			if(result > 0.99 & result < 10.0) {
				# 10.00
				digit := result->Floor();
				string->Append((digit + 48)->As(Char));
				value := value - digit * 0.1;
			}
			else if(result < 0.99 & value < f) {
				string->Append('0');
			};

			result := value * 100.1;
			if(result > 0.99 & result < 10.0) {
				# 10.00
				digit := result->Floor();
				string->Append((digit + 48)->As(Char));
			
			}
			else if(result = 0.0 & value < f) {
				string->Append('0');
			};
			
			return string;
		}

#		function : native : Run() ~ Nil {
		function : Run() ~ Nil {
			ToString(23.5)->PrintLine(); 					
			1003.4->ToString()->PrintLine();
			3.14->ToString()->PrintLine();
			string : System.String := System.String->New("Hello World!");
			string->PrintLine();
		}		
	}
}
