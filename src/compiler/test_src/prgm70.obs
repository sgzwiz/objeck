bundle Default { class Test {
    function : Main(args : String[]) ~ Nil {
	Run();
    }

    function : native : Run() ~ Nil {
#    function : Run() ~ Nil {
	f := Func(Int) ~ Int;
	f(13)->PrintLine();

	f2 := Foo->Bar(String) ~ Int;
	f2("Hello World!")->PrintLine();

  	s := Soul->New(f);
	s->Mecca();

	s->Out(Foo->Bar(String) ~ Int)->PrintLine();	
	(f2("Hello World!") * 10)->PrintLine();

	f3 := s->GetIt();
	f3(18)->PrintLine();
    }
    
    function : Func(v : Int) ~ Int {
	return  v * 2;
    }
  }

  class Soul {
	@f : (Int) ~ Int;

	New(f : (Int) ~ Int) {
		@f := f;	
	}

	function : Out(f : (String)~Int) ~ Int {
		f("Hello World!")->PrintLine();
		return 33;
	}

	method : public : Mecca() ~ Nil {
		@f(88);
		@f(88)->PrintLine();
	}

	method : public : GetIt() ~ (Int) ~ Int {
		return @f;
	}
  }

  class Foo {
    function : Bar(s : String) ~ Int {
   	return s->Size();
    }
  }
}

