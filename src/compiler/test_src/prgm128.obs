use Gtk2;

bundle Default {
	class MyButton from GtkButton {
		New(title : String) {
			Parent(title);
		}

		method : public : Clicked() ~ Nil {
			"clicked..."->PrintLine();
		}
	}

	class HelloGtk {
		function : FooBarHandle(widget : GtkWidget, param : Base) ~ Nil {
			"@@@ foo+bar @@@"->PrintLine();
		}

		function : DragHandle(widget : GtkWidget, event: GdkDragContext, param : Base) ~ Nil {
			"@@@ drag @@@"->PrintLine();
		}

		function : TestHandle(widget : GtkWidget, event: GdkEvent, param : Base) ~ Nil {
#			"Hello Gtk2"->PrintLine();
			Appliction->MainQuit();
		}

		function : FooHandle(widget : GtkWidget, event: GdkEvent, param : Base) ~ Nil {
			event_key := event->As(GdkEventKey);
			type := event_key->GetType()->As(Int);
			"-- press event: {$type} --"->PrintLine();
		}

		function : ButtonHandle(widget : GtkWidget, event: GdkEvent, param : Base) ~ Nil {
			widget->GetClass()->GetName()->PrintLine();
			param->GetClass()->GetName()->PrintLine();
		}

		function : Main(args : String[]) ~ Nil {
			# callbacks
			delete_callback := Events->DeleteEvent(GtkWidget) ~ Nil;
			test_callback := TestHandle(GtkWidget, GdkEvent, Base) ~ Nil;
			foo_callback := FooHandle(GtkWidget, GdkEvent, Base) ~ Nil;
			button_callback := ButtonHandle(GtkWidget, GdkEvent, Base) ~ Nil;
	
			# create 
			button := MyButton->New("button 1");
			button2 := MyButton->New("button 2");

			hbox := GtkHBox->New(false, 0);
			hbox->PackStart(button->As(GtkWidget), true, true, 0);
			hbox->PackStart(button2->As(GtkWidget), true, true, 0);

			window := GtkWindow->New(GtkWindowType->GTK_WINDOW_TOPLEVEL);
			window->SignalEventConnect("delete-event", test_callback, window);

# window->SignalEventConnect("key-press-event", foo_callback, window);

# window->SignalDragConnect("drag-begin", DragHandle(GtkWidget, GdkDragContext, Base) ~ Nil, window);

# button->SignalConnect("grab-focus", FooBarHandle(GtkWidget, Base) ~ Nil, window);

 

			window->SetBorderWidth(35);
			window->SetTitle("Goodbye, World!");

button->GetClass()->GetName()->PrintLine();

#			id := button->SignalEventConnect("clicked", button_callback, button);
#			button->SignalDisconnect(id);

button->GetLabel()->PrintLine();

			window->Add(hbox->As(GtkWidget));

group := GtkAccelGroup->New();
group->AccelGroupGetModifierMask();

			
			req := GtkRequisition->New();
			button->WidgetSizeRequest(req);

req->GetWidth()->PrintLine();
req->GetHeight()->PrintLine();

			# WidgetShow
			button->WidgetShow();
			button2->WidgetShow();
button2->WidgetGrabFocus();
			hbox->WidgetShow();			
			window->WidgetShow();
			Appliction->Main();
		}
	}
}
