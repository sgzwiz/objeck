use Collection;

bundle Default {
	class Test {
		function : Main(args : System.String[]) ~ Nil {
			Run();
		}
		
#	function : Find(key : Compare) ~ Nil {
	function : native : Find(key : Compare) ~ Nil {
		hash := (2 xor key->HashID() % 337)->Abs();
		hash->PrintLine();
	}

#		function : Run() ~ Nil {
		function : native : Run() ~ Nil {
			@buckets := List->New[337];
			
			(13 and 7)->PrintLine();
			a : Int := 13;
			(a and 7)->PrintLine();
			(7 and a)->PrintLine();
			
			(13 or 7)->PrintLine();
			(a or 7)->PrintLine();
			(7 or a)->PrintLine();
			
			(13 xor 7)->PrintLine();
			(a xor 7)->PrintLine();
			(7 xor a)->PrintLine();
			
			Find("Int"->As(Compare));
#~
			s := String->New();
			s->GetInstanceID()->PrintLine();

			a := 13;
			b := 7;
			(a xor b)->PrintLine();
			(13 xor b)->PrintLine();
			(7 xor a)->PrintLine();
			(7 xor 13)->PrintLine();

			i := "hollines"->GetInstanceID();
			i->PrintLine();
			hash := 2 xor i % 4027;
			hash->PrintLine();

			i := "hollines"->GetInstanceID();
			i->PrintLine();
			hash := 2 xor i % 4027;
			hash->PrintLine();

			i := "randy"->GetInstanceID();
			i->PrintLine();
			hash := 2 xor i % 4027;
			hash->PrintLine();

			i := "pug"->GetInstanceID();
			i->PrintLine();
			hash := 2 xor i % 4027;
			hash->PrintLine();
~#			
		}
	}
}
