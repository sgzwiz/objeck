Objeck v3.1.1_0

--------------
Release Notes
--------------
This release provides support for dynamic class loading.  A number of bugs were found and resolved as part of the Fast CGI integration effort.  Stress testing, performance tuning and bug fixing has also been done as part the "The Computer Language Benchmarks Game" challenge.  Initial benchmarks look favorable given that Objeck is an interpreted language.  Runtime performance, for the majority of the tests, is significantly faster than popular languages like as Ruby, Perl and Python.

Highlights of this specific release include the following:
* Support for dynamic class loading (new)
* In some cases, the compiler wasn't linking unused class libraries references (high - fixed)
* Memory allocated using the C/C++ APIs might collected before valid references were stored (hight - fixed)
* Int to String API now handles negative numbers (high - fixed)
* Strength reduction optimization bug was resolved (high - fixed)
* Implicit casting for basic types was passed as parameters was fixed (high - fixed)
* Improved error handling for Objeck APIs that leverage native function calls (high - fixed)
* Compiler bug related to operator assignment statements with lvalues that were array elements was resolved (high - fixed)
* Garbage collection stability bug was resolved Windows (high - fixed)
* A class cast bug was resolved (med - fixed)
* Garbage collection threading code was fixed to improve overall performance on all platforms (med - fixed)
* Compiler properly check file extensions (low - fixed)

--------------
About Objeck
--------------
The Objeck programming language is a lightweight object-oriented programming language with functional features. The programming system consists of a compiler, virtual machine (with garbage collector and JIT compiler) along with a command line debugger.